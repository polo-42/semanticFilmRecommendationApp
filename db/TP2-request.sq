# Dans cette partie il faudra créer et tester des requêtes SPARQL pour :

# 1.récupérer les informations dont on dispose à propos d’un film ou d’un utilisateur
PREFIX : <http://bda/tp2/paulmulard/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?title ?description ?genre ?copyright
WHERE { 
    ?film a :Film . 
    ?film rdfs:label ?title .
OPTIONAL {
    ?film rdfs:comment ?description
}
OPTIONAL {
    ?film :isOfType ?genre
}
OPTIONAL {
    ?film :baseCopyRight ?copyright
}}

PREFIX : <http://bda/tp2/paulmulard/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
SELECT ?firstname ?lastname ?balance
WHERE {
    ?user a :User .
    ?user foaf:firstName ?firstname .
    ?user foaf:lastName ?lastname .
OPTIONAL {
    ?user :balance ?balance
}}

# 2.trouver des paires film-utilisateur en fonction de divers critères de correspondance. Par
# exemple, le réalisateur du film fait partie des réalisateurs préférés de l’utilisateur, ..., un ou
# des acteurs du film ont joué dans l’un des films préférés de l’utilisateurs, etc.
PREFIX : <http://bda/tp2/paulmulard/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
SELECT DISTINCT ?user ?film
WHERE {{
    ?user a :User .
    ?film a :Film .
    ?director :produced ?film .
    ?user :favoriteDirectors/rdf:rest*/rdf:first ?director 
}
UNION {
    ?user a :User .
    ?film a :Film .
    ?actor :playedIn ?film .
    ?user :favoriteActors/rdf:rest*/rdf:first ?actor 
}}

PREFIX : <http://bda/tp2/paulmulard/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
SELECT DISTINCT ?user ?film
WHERE {
    ?user a :User .
    ?film a :Film .
    ?film :isOfType ?genre .
    ?user :favoriteTypes/rdf:rest*/rdf:first ?genre 
}
